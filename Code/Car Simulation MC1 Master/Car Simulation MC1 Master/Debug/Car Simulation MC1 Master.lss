
Car Simulation MC1 Master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e4  00800200  000007bc  00000850  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  008002e4  008002e4  00000934  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000934  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000964  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001258  00000000  00000000  00000b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000642  00000000  00000000  00001d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c5c  00000000  00000000  000023ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000474  00000000  00000000  0000302c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045b  00000000  00000000  000034a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009d9  00000000  00000000  000038fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  000042d4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	f8 c0       	rjmp	.+496    	; 0x1f6 <__vector_1>
   6:	00 00       	nop
   8:	34 c1       	rjmp	.+616    	; 0x272 <__vector_2>
   a:	00 00       	nop
   c:	70 c1       	rjmp	.+736    	; 0x2ee <__vector_3>
   e:	00 00       	nop
  10:	ac c1       	rjmp	.+856    	; 0x36a <__vector_4>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	1e c2       	rjmp	.+1084   	; 0x456 <__vector_6>
  1a:	00 00       	nop
  1c:	e4 c1       	rjmp	.+968    	; 0x3e6 <__vector_7>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec eb       	ldi	r30, 0xBC	; 188
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 3e       	cpi	r26, 0xE4	; 228
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 ee       	ldi	r26, 0xE4	; 228
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a7 3e       	cpi	r26, 0xE7	; 231
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	54 d2       	rcall	.+1192   	; 0x5c8 <main>
 120:	4b c3       	rjmp	.+1686   	; 0x7b8 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <ADC_init>:
 124:	10 92 7c 00 	sts	0x007C, r1
 128:	ea e7       	ldi	r30, 0x7A	; 122
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	83 68       	ori	r24, 0x83	; 131
 130:	80 83       	st	Z, r24
 132:	08 95       	ret

00000134 <ADC_Read>:
 134:	ec e7       	ldi	r30, 0x7C	; 124
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	90 81       	ld	r25, Z
 13a:	90 7e       	andi	r25, 0xE0	; 224
 13c:	90 83       	st	Z, r25
 13e:	90 81       	ld	r25, Z
 140:	87 70       	andi	r24, 0x07	; 7
 142:	98 2b       	or	r25, r24
 144:	90 83       	st	Z, r25
 146:	ea e7       	ldi	r30, 0x7A	; 122
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	80 81       	ld	r24, Z
 14c:	80 64       	ori	r24, 0x40	; 64
 14e:	80 83       	st	Z, r24
 150:	80 81       	ld	r24, Z
 152:	84 ff       	sbrs	r24, 4
 154:	fd cf       	rjmp	.-6      	; 0x150 <ADC_Read+0x1c>
 156:	ea e7       	ldi	r30, 0x7A	; 122
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	80 61       	ori	r24, 0x10	; 16
 15e:	80 83       	st	Z, r24
 160:	80 91 78 00 	lds	r24, 0x0078
 164:	90 91 79 00 	lds	r25, 0x0079
 168:	08 95       	ret

0000016a <INT0_init>:
 16a:	8f b7       	in	r24, 0x3f	; 63
 16c:	8f 77       	andi	r24, 0x7F	; 127
 16e:	8f bf       	out	0x3f, r24	; 63
 170:	e8 9a       	sbi	0x1d, 0	; 29
 172:	50 98       	cbi	0x0a, 0	; 10
 174:	e9 e6       	ldi	r30, 0x69	; 105
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	83 60       	ori	r24, 0x03	; 3
 17c:	80 83       	st	Z, r24
 17e:	8f b7       	in	r24, 0x3f	; 63
 180:	80 68       	ori	r24, 0x80	; 128
 182:	8f bf       	out	0x3f, r24	; 63
 184:	08 95       	ret

00000186 <INT1_init>:
 186:	8f b7       	in	r24, 0x3f	; 63
 188:	8f 77       	andi	r24, 0x7F	; 127
 18a:	8f bf       	out	0x3f, r24	; 63
 18c:	e9 9a       	sbi	0x1d, 1	; 29
 18e:	51 98       	cbi	0x0a, 1	; 10
 190:	e9 e6       	ldi	r30, 0x69	; 105
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	8c 60       	ori	r24, 0x0C	; 12
 198:	80 83       	st	Z, r24
 19a:	8f b7       	in	r24, 0x3f	; 63
 19c:	80 68       	ori	r24, 0x80	; 128
 19e:	8f bf       	out	0x3f, r24	; 63
 1a0:	08 95       	ret

000001a2 <INT2_init>:
 1a2:	8f b7       	in	r24, 0x3f	; 63
 1a4:	8f 77       	andi	r24, 0x7F	; 127
 1a6:	8f bf       	out	0x3f, r24	; 63
 1a8:	ea 9a       	sbi	0x1d, 2	; 29
 1aa:	52 98       	cbi	0x0a, 2	; 10
 1ac:	e9 e6       	ldi	r30, 0x69	; 105
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	80 81       	ld	r24, Z
 1b2:	80 63       	ori	r24, 0x30	; 48
 1b4:	80 83       	st	Z, r24
 1b6:	8f b7       	in	r24, 0x3f	; 63
 1b8:	80 68       	ori	r24, 0x80	; 128
 1ba:	8f bf       	out	0x3f, r24	; 63
 1bc:	08 95       	ret

000001be <INT3_init>:
 1be:	8f b7       	in	r24, 0x3f	; 63
 1c0:	8f 77       	andi	r24, 0x7F	; 127
 1c2:	8f bf       	out	0x3f, r24	; 63
 1c4:	eb 9a       	sbi	0x1d, 3	; 29
 1c6:	53 98       	cbi	0x0a, 3	; 10
 1c8:	e9 e6       	ldi	r30, 0x69	; 105
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	80 6c       	ori	r24, 0xC0	; 192
 1d0:	80 83       	st	Z, r24
 1d2:	8f b7       	in	r24, 0x3f	; 63
 1d4:	80 68       	ori	r24, 0x80	; 128
 1d6:	8f bf       	out	0x3f, r24	; 63
 1d8:	08 95       	ret

000001da <INT6_init>:
 1da:	8f b7       	in	r24, 0x3f	; 63
 1dc:	8f 77       	andi	r24, 0x7F	; 127
 1de:	8f bf       	out	0x3f, r24	; 63
 1e0:	ee 9a       	sbi	0x1d, 6	; 29
 1e2:	6e 98       	cbi	0x0d, 6	; 13
 1e4:	ea e6       	ldi	r30, 0x6A	; 106
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	80 63       	ori	r24, 0x30	; 48
 1ec:	80 83       	st	Z, r24
 1ee:	8f b7       	in	r24, 0x3f	; 63
 1f0:	80 68       	ori	r24, 0x80	; 128
 1f2:	8f bf       	out	0x3f, r24	; 63
 1f4:	08 95       	ret

000001f6 <__vector_1>:
 1f6:	1f 92       	push	r1
 1f8:	0f 92       	push	r0
 1fa:	0f b6       	in	r0, 0x3f	; 63
 1fc:	0f 92       	push	r0
 1fe:	11 24       	eor	r1, r1
 200:	0b b6       	in	r0, 0x3b	; 59
 202:	0f 92       	push	r0
 204:	2f 93       	push	r18
 206:	3f 93       	push	r19
 208:	4f 93       	push	r20
 20a:	5f 93       	push	r21
 20c:	6f 93       	push	r22
 20e:	7f 93       	push	r23
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
 214:	af 93       	push	r26
 216:	bf 93       	push	r27
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	ef 93       	push	r30
 21e:	ff 93       	push	r31
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	5c d2       	rcall	.+1208   	; 0x6dc <PWM1_init>
 224:	c4 ee       	ldi	r28, 0xE4	; 228
 226:	d2 e0       	ldi	r29, 0x02	; 2
 228:	88 81       	ld	r24, Y
 22a:	60 d2       	rcall	.+1216   	; 0x6ec <PWM2_init>
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	75 d2       	rcall	.+1258   	; 0x71a <PWM4_init>
 230:	88 81       	ld	r24, Y
 232:	64 d2       	rcall	.+1224   	; 0x6fc <PWM3_init>
 234:	40 e0       	ldi	r20, 0x00	; 0
 236:	52 e0       	ldi	r21, 0x02	; 2
 238:	60 e0       	ldi	r22, 0x00	; 0
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	a0 d1       	rcall	.+832    	; 0x57e <LCD_DisplayStringRowCol>
 23e:	41 e1       	ldi	r20, 0x11	; 17
 240:	52 e0       	ldi	r21, 0x02	; 2
 242:	60 e0       	ldi	r22, 0x00	; 0
 244:	83 e0       	ldi	r24, 0x03	; 3
 246:	9b d1       	rcall	.+822    	; 0x57e <LCD_DisplayStringRowCol>
 248:	ff 91       	pop	r31
 24a:	ef 91       	pop	r30
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	bf 91       	pop	r27
 252:	af 91       	pop	r26
 254:	9f 91       	pop	r25
 256:	8f 91       	pop	r24
 258:	7f 91       	pop	r23
 25a:	6f 91       	pop	r22
 25c:	5f 91       	pop	r21
 25e:	4f 91       	pop	r20
 260:	3f 91       	pop	r19
 262:	2f 91       	pop	r18
 264:	0f 90       	pop	r0
 266:	0b be       	out	0x3b, r0	; 59
 268:	0f 90       	pop	r0
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	0f 90       	pop	r0
 26e:	1f 90       	pop	r1
 270:	18 95       	reti

00000272 <__vector_2>:
 272:	1f 92       	push	r1
 274:	0f 92       	push	r0
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	0f 92       	push	r0
 27a:	11 24       	eor	r1, r1
 27c:	0b b6       	in	r0, 0x3b	; 59
 27e:	0f 92       	push	r0
 280:	2f 93       	push	r18
 282:	3f 93       	push	r19
 284:	4f 93       	push	r20
 286:	5f 93       	push	r21
 288:	6f 93       	push	r22
 28a:	7f 93       	push	r23
 28c:	8f 93       	push	r24
 28e:	9f 93       	push	r25
 290:	af 93       	push	r26
 292:	bf 93       	push	r27
 294:	cf 93       	push	r28
 296:	df 93       	push	r29
 298:	ef 93       	push	r30
 29a:	ff 93       	push	r31
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	26 d2       	rcall	.+1100   	; 0x6ec <PWM2_init>
 2a0:	c4 ee       	ldi	r28, 0xE4	; 228
 2a2:	d2 e0       	ldi	r29, 0x02	; 2
 2a4:	88 81       	ld	r24, Y
 2a6:	1a d2       	rcall	.+1076   	; 0x6dc <PWM1_init>
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	28 d2       	rcall	.+1104   	; 0x6fc <PWM3_init>
 2ac:	88 81       	ld	r24, Y
 2ae:	35 d2       	rcall	.+1130   	; 0x71a <PWM4_init>
 2b0:	42 e2       	ldi	r20, 0x22	; 34
 2b2:	52 e0       	ldi	r21, 0x02	; 2
 2b4:	60 e0       	ldi	r22, 0x00	; 0
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	62 d1       	rcall	.+708    	; 0x57e <LCD_DisplayStringRowCol>
 2ba:	41 e1       	ldi	r20, 0x11	; 17
 2bc:	52 e0       	ldi	r21, 0x02	; 2
 2be:	60 e0       	ldi	r22, 0x00	; 0
 2c0:	83 e0       	ldi	r24, 0x03	; 3
 2c2:	5d d1       	rcall	.+698    	; 0x57e <LCD_DisplayStringRowCol>
 2c4:	ff 91       	pop	r31
 2c6:	ef 91       	pop	r30
 2c8:	df 91       	pop	r29
 2ca:	cf 91       	pop	r28
 2cc:	bf 91       	pop	r27
 2ce:	af 91       	pop	r26
 2d0:	9f 91       	pop	r25
 2d2:	8f 91       	pop	r24
 2d4:	7f 91       	pop	r23
 2d6:	6f 91       	pop	r22
 2d8:	5f 91       	pop	r21
 2da:	4f 91       	pop	r20
 2dc:	3f 91       	pop	r19
 2de:	2f 91       	pop	r18
 2e0:	0f 90       	pop	r0
 2e2:	0b be       	out	0x3b, r0	; 59
 2e4:	0f 90       	pop	r0
 2e6:	0f be       	out	0x3f, r0	; 63
 2e8:	0f 90       	pop	r0
 2ea:	1f 90       	pop	r1
 2ec:	18 95       	reti

000002ee <__vector_3>:
 2ee:	1f 92       	push	r1
 2f0:	0f 92       	push	r0
 2f2:	0f b6       	in	r0, 0x3f	; 63
 2f4:	0f 92       	push	r0
 2f6:	11 24       	eor	r1, r1
 2f8:	0b b6       	in	r0, 0x3b	; 59
 2fa:	0f 92       	push	r0
 2fc:	2f 93       	push	r18
 2fe:	3f 93       	push	r19
 300:	4f 93       	push	r20
 302:	5f 93       	push	r21
 304:	6f 93       	push	r22
 306:	7f 93       	push	r23
 308:	8f 93       	push	r24
 30a:	9f 93       	push	r25
 30c:	af 93       	push	r26
 30e:	bf 93       	push	r27
 310:	cf 93       	push	r28
 312:	df 93       	push	r29
 314:	ef 93       	push	r30
 316:	ff 93       	push	r31
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	e0 d1       	rcall	.+960    	; 0x6dc <PWM1_init>
 31c:	c4 ee       	ldi	r28, 0xE4	; 228
 31e:	d2 e0       	ldi	r29, 0x02	; 2
 320:	88 81       	ld	r24, Y
 322:	e4 d1       	rcall	.+968    	; 0x6ec <PWM2_init>
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	ea d1       	rcall	.+980    	; 0x6fc <PWM3_init>
 328:	88 81       	ld	r24, Y
 32a:	f7 d1       	rcall	.+1006   	; 0x71a <PWM4_init>
 32c:	43 e3       	ldi	r20, 0x33	; 51
 32e:	52 e0       	ldi	r21, 0x02	; 2
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	24 d1       	rcall	.+584    	; 0x57e <LCD_DisplayStringRowCol>
 336:	41 e1       	ldi	r20, 0x11	; 17
 338:	52 e0       	ldi	r21, 0x02	; 2
 33a:	60 e0       	ldi	r22, 0x00	; 0
 33c:	83 e0       	ldi	r24, 0x03	; 3
 33e:	1f d1       	rcall	.+574    	; 0x57e <LCD_DisplayStringRowCol>
 340:	ff 91       	pop	r31
 342:	ef 91       	pop	r30
 344:	df 91       	pop	r29
 346:	cf 91       	pop	r28
 348:	bf 91       	pop	r27
 34a:	af 91       	pop	r26
 34c:	9f 91       	pop	r25
 34e:	8f 91       	pop	r24
 350:	7f 91       	pop	r23
 352:	6f 91       	pop	r22
 354:	5f 91       	pop	r21
 356:	4f 91       	pop	r20
 358:	3f 91       	pop	r19
 35a:	2f 91       	pop	r18
 35c:	0f 90       	pop	r0
 35e:	0b be       	out	0x3b, r0	; 59
 360:	0f 90       	pop	r0
 362:	0f be       	out	0x3f, r0	; 63
 364:	0f 90       	pop	r0
 366:	1f 90       	pop	r1
 368:	18 95       	reti

0000036a <__vector_4>:
 36a:	1f 92       	push	r1
 36c:	0f 92       	push	r0
 36e:	0f b6       	in	r0, 0x3f	; 63
 370:	0f 92       	push	r0
 372:	11 24       	eor	r1, r1
 374:	0b b6       	in	r0, 0x3b	; 59
 376:	0f 92       	push	r0
 378:	2f 93       	push	r18
 37a:	3f 93       	push	r19
 37c:	4f 93       	push	r20
 37e:	5f 93       	push	r21
 380:	6f 93       	push	r22
 382:	7f 93       	push	r23
 384:	8f 93       	push	r24
 386:	9f 93       	push	r25
 388:	af 93       	push	r26
 38a:	bf 93       	push	r27
 38c:	cf 93       	push	r28
 38e:	df 93       	push	r29
 390:	ef 93       	push	r30
 392:	ff 93       	push	r31
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	aa d1       	rcall	.+852    	; 0x6ec <PWM2_init>
 398:	c4 ee       	ldi	r28, 0xE4	; 228
 39a:	d2 e0       	ldi	r29, 0x02	; 2
 39c:	88 81       	ld	r24, Y
 39e:	9e d1       	rcall	.+828    	; 0x6dc <PWM1_init>
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	bb d1       	rcall	.+886    	; 0x71a <PWM4_init>
 3a4:	88 81       	ld	r24, Y
 3a6:	aa d1       	rcall	.+852    	; 0x6fc <PWM3_init>
 3a8:	44 e4       	ldi	r20, 0x44	; 68
 3aa:	52 e0       	ldi	r21, 0x02	; 2
 3ac:	60 e0       	ldi	r22, 0x00	; 0
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	e6 d0       	rcall	.+460    	; 0x57e <LCD_DisplayStringRowCol>
 3b2:	41 e1       	ldi	r20, 0x11	; 17
 3b4:	52 e0       	ldi	r21, 0x02	; 2
 3b6:	60 e0       	ldi	r22, 0x00	; 0
 3b8:	83 e0       	ldi	r24, 0x03	; 3
 3ba:	e1 d0       	rcall	.+450    	; 0x57e <LCD_DisplayStringRowCol>
 3bc:	ff 91       	pop	r31
 3be:	ef 91       	pop	r30
 3c0:	df 91       	pop	r29
 3c2:	cf 91       	pop	r28
 3c4:	bf 91       	pop	r27
 3c6:	af 91       	pop	r26
 3c8:	9f 91       	pop	r25
 3ca:	8f 91       	pop	r24
 3cc:	7f 91       	pop	r23
 3ce:	6f 91       	pop	r22
 3d0:	5f 91       	pop	r21
 3d2:	4f 91       	pop	r20
 3d4:	3f 91       	pop	r19
 3d6:	2f 91       	pop	r18
 3d8:	0f 90       	pop	r0
 3da:	0b be       	out	0x3b, r0	; 59
 3dc:	0f 90       	pop	r0
 3de:	0f be       	out	0x3f, r0	; 63
 3e0:	0f 90       	pop	r0
 3e2:	1f 90       	pop	r1
 3e4:	18 95       	reti

000003e6 <__vector_7>:
 3e6:	1f 92       	push	r1
 3e8:	0f 92       	push	r0
 3ea:	0f b6       	in	r0, 0x3f	; 63
 3ec:	0f 92       	push	r0
 3ee:	11 24       	eor	r1, r1
 3f0:	0b b6       	in	r0, 0x3b	; 59
 3f2:	0f 92       	push	r0
 3f4:	2f 93       	push	r18
 3f6:	3f 93       	push	r19
 3f8:	4f 93       	push	r20
 3fa:	5f 93       	push	r21
 3fc:	6f 93       	push	r22
 3fe:	7f 93       	push	r23
 400:	8f 93       	push	r24
 402:	9f 93       	push	r25
 404:	af 93       	push	r26
 406:	bf 93       	push	r27
 408:	ef 93       	push	r30
 40a:	ff 93       	push	r31
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	66 d1       	rcall	.+716    	; 0x6dc <PWM1_init>
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	6c d1       	rcall	.+728    	; 0x6ec <PWM2_init>
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	72 d1       	rcall	.+740    	; 0x6fc <PWM3_init>
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	7f d1       	rcall	.+766    	; 0x71a <PWM4_init>
 41c:	45 e5       	ldi	r20, 0x55	; 85
 41e:	52 e0       	ldi	r21, 0x02	; 2
 420:	60 e0       	ldi	r22, 0x00	; 0
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	ac d0       	rcall	.+344    	; 0x57e <LCD_DisplayStringRowCol>
 426:	41 e1       	ldi	r20, 0x11	; 17
 428:	52 e0       	ldi	r21, 0x02	; 2
 42a:	60 e0       	ldi	r22, 0x00	; 0
 42c:	83 e0       	ldi	r24, 0x03	; 3
 42e:	a7 d0       	rcall	.+334    	; 0x57e <LCD_DisplayStringRowCol>
 430:	ff 91       	pop	r31
 432:	ef 91       	pop	r30
 434:	bf 91       	pop	r27
 436:	af 91       	pop	r26
 438:	9f 91       	pop	r25
 43a:	8f 91       	pop	r24
 43c:	7f 91       	pop	r23
 43e:	6f 91       	pop	r22
 440:	5f 91       	pop	r21
 442:	4f 91       	pop	r20
 444:	3f 91       	pop	r19
 446:	2f 91       	pop	r18
 448:	0f 90       	pop	r0
 44a:	0b be       	out	0x3b, r0	; 59
 44c:	0f 90       	pop	r0
 44e:	0f be       	out	0x3f, r0	; 63
 450:	0f 90       	pop	r0
 452:	1f 90       	pop	r1
 454:	18 95       	reti

00000456 <__vector_6>:
 456:	1f 92       	push	r1
 458:	0f 92       	push	r0
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	0f 92       	push	r0
 45e:	11 24       	eor	r1, r1
 460:	0b b6       	in	r0, 0x3b	; 59
 462:	0f 92       	push	r0
 464:	8f 93       	push	r24
 466:	9f 93       	push	r25
 468:	ef 93       	push	r30
 46a:	ff 93       	push	r31
 46c:	e5 e0       	ldi	r30, 0x05	; 5
 46e:	f1 e0       	ldi	r31, 0x01	; 1
 470:	8f e0       	ldi	r24, 0x0F	; 15
 472:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 474:	8f e4       	ldi	r24, 0x4F	; 79
 476:	93 ec       	ldi	r25, 0xC3	; 195
 478:	01 97       	sbiw	r24, 0x01	; 1
 47a:	f1 f7       	brne	.-4      	; 0x478 <__vector_6+0x22>
 47c:	00 c0       	rjmp	.+0      	; 0x47e <__vector_6+0x28>
 47e:	00 00       	nop
 480:	10 82       	st	Z, r1
 482:	8f e4       	ldi	r24, 0x4F	; 79
 484:	93 ec       	ldi	r25, 0xC3	; 195
 486:	01 97       	sbiw	r24, 0x01	; 1
 488:	f1 f7       	brne	.-4      	; 0x486 <__vector_6+0x30>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <__vector_6+0x36>
 48c:	00 00       	nop
 48e:	ff 91       	pop	r31
 490:	ef 91       	pop	r30
 492:	9f 91       	pop	r25
 494:	8f 91       	pop	r24
 496:	0f 90       	pop	r0
 498:	0b be       	out	0x3b, r0	; 59
 49a:	0f 90       	pop	r0
 49c:	0f be       	out	0x3f, r0	; 63
 49e:	0f 90       	pop	r0
 4a0:	1f 90       	pop	r1
 4a2:	18 95       	reti

000004a4 <LCD_SendCommand>:
 4a4:	40 98       	cbi	0x08, 0	; 8
 4a6:	41 98       	cbi	0x08, 1	; 8
 4a8:	ef ec       	ldi	r30, 0xCF	; 207
 4aa:	f7 e0       	ldi	r31, 0x07	; 7
 4ac:	31 97       	sbiw	r30, 0x01	; 1
 4ae:	f1 f7       	brne	.-4      	; 0x4ac <LCD_SendCommand+0x8>
 4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <LCD_SendCommand+0xe>
 4b2:	00 00       	nop
 4b4:	42 9a       	sbi	0x08, 2	; 8
 4b6:	ef ec       	ldi	r30, 0xCF	; 207
 4b8:	f7 e0       	ldi	r31, 0x07	; 7
 4ba:	31 97       	sbiw	r30, 0x01	; 1
 4bc:	f1 f7       	brne	.-4      	; 0x4ba <LCD_SendCommand+0x16>
 4be:	00 c0       	rjmp	.+0      	; 0x4c0 <LCD_SendCommand+0x1c>
 4c0:	00 00       	nop
 4c2:	82 b9       	out	0x02, r24	; 2
 4c4:	8f ec       	ldi	r24, 0xCF	; 207
 4c6:	97 e0       	ldi	r25, 0x07	; 7
 4c8:	01 97       	sbiw	r24, 0x01	; 1
 4ca:	f1 f7       	brne	.-4      	; 0x4c8 <LCD_SendCommand+0x24>
 4cc:	00 c0       	rjmp	.+0      	; 0x4ce <LCD_SendCommand+0x2a>
 4ce:	00 00       	nop
 4d0:	42 98       	cbi	0x08, 2	; 8
 4d2:	ef ec       	ldi	r30, 0xCF	; 207
 4d4:	f7 e0       	ldi	r31, 0x07	; 7
 4d6:	31 97       	sbiw	r30, 0x01	; 1
 4d8:	f1 f7       	brne	.-4      	; 0x4d6 <LCD_SendCommand+0x32>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <LCD_SendCommand+0x38>
 4dc:	00 00       	nop
 4de:	08 95       	ret

000004e0 <LCD_Init>:
 4e0:	87 b1       	in	r24, 0x07	; 7
 4e2:	87 60       	ori	r24, 0x07	; 7
 4e4:	87 b9       	out	0x07, r24	; 7
 4e6:	81 b1       	in	r24, 0x01	; 1
 4e8:	8f ef       	ldi	r24, 0xFF	; 255
 4ea:	81 b9       	out	0x01, r24	; 1
 4ec:	88 e3       	ldi	r24, 0x38	; 56
 4ee:	da df       	rcall	.-76     	; 0x4a4 <LCD_SendCommand>
 4f0:	8c e0       	ldi	r24, 0x0C	; 12
 4f2:	d8 df       	rcall	.-80     	; 0x4a4 <LCD_SendCommand>
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	d6 cf       	rjmp	.-84     	; 0x4a4 <LCD_SendCommand>
 4f8:	08 95       	ret

000004fa <LCD_DisplayCharacter>:
 4fa:	40 9a       	sbi	0x08, 0	; 8
 4fc:	41 98       	cbi	0x08, 1	; 8
 4fe:	ef ec       	ldi	r30, 0xCF	; 207
 500:	f7 e0       	ldi	r31, 0x07	; 7
 502:	31 97       	sbiw	r30, 0x01	; 1
 504:	f1 f7       	brne	.-4      	; 0x502 <LCD_DisplayCharacter+0x8>
 506:	00 c0       	rjmp	.+0      	; 0x508 <LCD_DisplayCharacter+0xe>
 508:	00 00       	nop
 50a:	42 9a       	sbi	0x08, 2	; 8
 50c:	ef ec       	ldi	r30, 0xCF	; 207
 50e:	f7 e0       	ldi	r31, 0x07	; 7
 510:	31 97       	sbiw	r30, 0x01	; 1
 512:	f1 f7       	brne	.-4      	; 0x510 <LCD_DisplayCharacter+0x16>
 514:	00 c0       	rjmp	.+0      	; 0x516 <LCD_DisplayCharacter+0x1c>
 516:	00 00       	nop
 518:	82 b9       	out	0x02, r24	; 2
 51a:	8f ec       	ldi	r24, 0xCF	; 207
 51c:	97 e0       	ldi	r25, 0x07	; 7
 51e:	01 97       	sbiw	r24, 0x01	; 1
 520:	f1 f7       	brne	.-4      	; 0x51e <LCD_DisplayCharacter+0x24>
 522:	00 c0       	rjmp	.+0      	; 0x524 <LCD_DisplayCharacter+0x2a>
 524:	00 00       	nop
 526:	42 98       	cbi	0x08, 2	; 8
 528:	ef ec       	ldi	r30, 0xCF	; 207
 52a:	f7 e0       	ldi	r31, 0x07	; 7
 52c:	31 97       	sbiw	r30, 0x01	; 1
 52e:	f1 f7       	brne	.-4      	; 0x52c <LCD_DisplayCharacter+0x32>
 530:	00 c0       	rjmp	.+0      	; 0x532 <LCD_DisplayCharacter+0x38>
 532:	00 00       	nop
 534:	08 95       	ret

00000536 <LCD_DisplayString>:
 536:	cf 93       	push	r28
 538:	df 93       	push	r29
 53a:	ec 01       	movw	r28, r24
 53c:	88 81       	ld	r24, Y
 53e:	88 23       	and	r24, r24
 540:	29 f0       	breq	.+10     	; 0x54c <LCD_DisplayString+0x16>
 542:	21 96       	adiw	r28, 0x01	; 1
 544:	da df       	rcall	.-76     	; 0x4fa <LCD_DisplayCharacter>
 546:	89 91       	ld	r24, Y+
 548:	81 11       	cpse	r24, r1
 54a:	fc cf       	rjmp	.-8      	; 0x544 <LCD_DisplayString+0xe>
 54c:	df 91       	pop	r29
 54e:	cf 91       	pop	r28
 550:	08 95       	ret

00000552 <LCD_GoToRowCol>:
 552:	81 30       	cpi	r24, 0x01	; 1
 554:	41 f0       	breq	.+16     	; 0x566 <LCD_GoToRowCol+0x14>
 556:	28 f0       	brcs	.+10     	; 0x562 <LCD_GoToRowCol+0x10>
 558:	82 30       	cpi	r24, 0x02	; 2
 55a:	41 f0       	breq	.+16     	; 0x56c <LCD_GoToRowCol+0x1a>
 55c:	83 30       	cpi	r24, 0x03	; 3
 55e:	49 f0       	breq	.+18     	; 0x572 <LCD_GoToRowCol+0x20>
 560:	0a c0       	rjmp	.+20     	; 0x576 <LCD_GoToRowCol+0x24>
 562:	96 2f       	mov	r25, r22
 564:	08 c0       	rjmp	.+16     	; 0x576 <LCD_GoToRowCol+0x24>
 566:	90 e4       	ldi	r25, 0x40	; 64
 568:	96 0f       	add	r25, r22
 56a:	05 c0       	rjmp	.+10     	; 0x576 <LCD_GoToRowCol+0x24>
 56c:	90 e1       	ldi	r25, 0x10	; 16
 56e:	96 0f       	add	r25, r22
 570:	02 c0       	rjmp	.+4      	; 0x576 <LCD_GoToRowCol+0x24>
 572:	90 e5       	ldi	r25, 0x50	; 80
 574:	96 0f       	add	r25, r22
 576:	89 2f       	mov	r24, r25
 578:	80 68       	ori	r24, 0x80	; 128
 57a:	94 cf       	rjmp	.-216    	; 0x4a4 <LCD_SendCommand>
 57c:	08 95       	ret

0000057e <LCD_DisplayStringRowCol>:
 57e:	cf 93       	push	r28
 580:	df 93       	push	r29
 582:	ea 01       	movw	r28, r20
 584:	e6 df       	rcall	.-52     	; 0x552 <LCD_GoToRowCol>
 586:	ce 01       	movw	r24, r28
 588:	d6 df       	rcall	.-84     	; 0x536 <LCD_DisplayString>
 58a:	df 91       	pop	r29
 58c:	cf 91       	pop	r28
 58e:	08 95       	ret

00000590 <LCD_IntToString>:
 590:	cf 93       	push	r28
 592:	df 93       	push	r29
 594:	cd b7       	in	r28, 0x3d	; 61
 596:	de b7       	in	r29, 0x3e	; 62
 598:	60 97       	sbiw	r28, 0x10	; 16
 59a:	0f b6       	in	r0, 0x3f	; 63
 59c:	f8 94       	cli
 59e:	de bf       	out	0x3e, r29	; 62
 5a0:	0f be       	out	0x3f, r0	; 63
 5a2:	cd bf       	out	0x3d, r28	; 61
 5a4:	4a e0       	ldi	r20, 0x0A	; 10
 5a6:	50 e0       	ldi	r21, 0x00	; 0
 5a8:	be 01       	movw	r22, r28
 5aa:	6f 5f       	subi	r22, 0xFF	; 255
 5ac:	7f 4f       	sbci	r23, 0xFF	; 255
 5ae:	c7 d0       	rcall	.+398    	; 0x73e <itoa>
 5b0:	ce 01       	movw	r24, r28
 5b2:	01 96       	adiw	r24, 0x01	; 1
 5b4:	c0 df       	rcall	.-128    	; 0x536 <LCD_DisplayString>
 5b6:	60 96       	adiw	r28, 0x10	; 16
 5b8:	0f b6       	in	r0, 0x3f	; 63
 5ba:	f8 94       	cli
 5bc:	de bf       	out	0x3e, r29	; 62
 5be:	0f be       	out	0x3f, r0	; 63
 5c0:	cd bf       	out	0x3d, r28	; 61
 5c2:	df 91       	pop	r29
 5c4:	cf 91       	pop	r28
 5c6:	08 95       	ret

000005c8 <main>:
uint16 speed;
uint8 x;

int main(void)
{
LCD_Init();
 5c8:	8b df       	rcall	.-234    	; 0x4e0 <LCD_Init>
ADC_init();
 5ca:	ac dd       	rcall	.-1192   	; 0x124 <ADC_init>
SPI_Master_init();
 5cc:	b1 d0       	rcall	.+354    	; 0x730 <SPI_Master_init>
LCD_DisplayStringRowCol(0,0,"Speed :   ");
 5ce:	49 e6       	ldi	r20, 0x69	; 105
 5d0:	52 e0       	ldi	r21, 0x02	; 2
 5d2:	60 e0       	ldi	r22, 0x00	; 0
 5d4:	80 e0       	ldi	r24, 0x00	; 0
 5d6:	d3 df       	rcall	.-90     	; 0x57e <LCD_DisplayStringRowCol>
LCD_DisplayStringRowCol(1,0,"Stop           ");
 5d8:	44 e7       	ldi	r20, 0x74	; 116
 5da:	52 e0       	ldi	r21, 0x02	; 2
 5dc:	60 e0       	ldi	r22, 0x00	; 0
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	ce df       	rcall	.-100    	; 0x57e <LCD_DisplayStringRowCol>

LCD_DisplayStringRowCol(2,0,"Lights OFF    ");
 5e2:	44 e8       	ldi	r20, 0x84	; 132
 5e4:	52 e0       	ldi	r21, 0x02	; 2
 5e6:	60 e0       	ldi	r22, 0x00	; 0
 5e8:	82 e0       	ldi	r24, 0x02	; 2
 5ea:	c9 df       	rcall	.-110    	; 0x57e <LCD_DisplayStringRowCol>
PORTD=0b00001111;
 5ec:	8f e0       	ldi	r24, 0x0F	; 15
 5ee:	8b b9       	out	0x0b, r24	; 11
PORTE=0b01000000;
 5f0:	80 e4       	ldi	r24, 0x40	; 64
 5f2:	8e b9       	out	0x0e, r24	; 14
DDRC=0xff;
 5f4:	8f ef       	ldi	r24, 0xFF	; 255
 5f6:	87 b9       	out	0x07, r24	; 7
DDRK=0;
 5f8:	10 92 07 01 	sts	0x0107, r1
DDRD=0xff;
 5fc:	8a b9       	out	0x0a, r24	; 10
DDRL=0xff;
 5fe:	80 93 0a 01 	sts	0x010A, r24
DDRJ=0xff;
 602:	80 93 04 01 	sts	0x0104, r24
while(1)
{
	PORTK=0xFF;
 606:	08 e0       	ldi	r16, 0x08	; 8
 608:	11 e0       	ldi	r17, 0x01	; 1
 60a:	dd 24       	eor	r13, r13
 60c:	da 94       	dec	r13
LCD_DisplayStringRowCol(0,12,"km/h");




if(BIT_IS_CLEAR(PINK,PK0))
 60e:	c6 e0       	ldi	r28, 0x06	; 6
 610:	d1 e0       	ldi	r29, 0x01	; 1
{
	PORTC=0b01111000;
 612:	0f 2e       	mov	r0, r31
 614:	f8 e7       	ldi	r31, 0x78	; 120
 616:	af 2e       	mov	r10, r31
 618:	f0 2d       	mov	r31, r0
	LCD_DisplayStringRowCol(2,0,"Lights On      ");
}

if(BIT_IS_CLEAR(PINK,PK1))
{
		PORTJ=0b00001111;
 61a:	0f 2e       	mov	r0, r31
 61c:	f5 e0       	ldi	r31, 0x05	; 5
 61e:	ef 2e       	mov	r14, r31
 620:	ff 24       	eor	r15, r15
 622:	f3 94       	inc	r15
 624:	f0 2d       	mov	r31, r0
 626:	0f 2e       	mov	r0, r31
 628:	ff e0       	ldi	r31, 0x0F	; 15
 62a:	bf 2e       	mov	r11, r31
 62c:	f0 2d       	mov	r31, r0
}


if(BIT_IS_CLEAR(PINK,PK2))
{
	PORTD=0b11000000;
 62e:	0f 2e       	mov	r0, r31
 630:	f0 ec       	ldi	r31, 0xC0	; 192
 632:	cf 2e       	mov	r12, r31
 634:	f0 2d       	mov	r31, r0
DDRD=0xff;
DDRL=0xff;
DDRJ=0xff;
while(1)
{
	PORTK=0xFF;
 636:	f8 01       	movw	r30, r16
 638:	d0 82       	st	Z, r13

	INT0_init();
 63a:	97 dd       	rcall	.-1234   	; 0x16a <INT0_init>
	INT1_init();
 63c:	a4 dd       	rcall	.-1208   	; 0x186 <INT1_init>
	INT2_init();
 63e:	b1 dd       	rcall	.-1182   	; 0x1a2 <INT2_init>
	INT3_init();
 640:	be dd       	rcall	.-1156   	; 0x1be <INT3_init>
	INT6_init();
 642:	cb dd       	rcall	.-1130   	; 0x1da <INT6_init>

speed=ADC_Read(0);
 644:	80 e0       	ldi	r24, 0x00	; 0
 646:	76 dd       	rcall	.-1300   	; 0x134 <ADC_Read>
 648:	90 93 e6 02 	sts	0x02E6, r25
 64c:	80 93 e5 02 	sts	0x02E5, r24
x=speed/4;
 650:	96 95       	lsr	r25
 652:	87 95       	ror	r24
 654:	96 95       	lsr	r25
 656:	87 95       	ror	r24
 658:	80 93 e4 02 	sts	0x02E4, r24


LCD_GoToRowCol(0,8);
 65c:	68 e0       	ldi	r22, 0x08	; 8
 65e:	80 e0       	ldi	r24, 0x00	; 0
 660:	78 df       	rcall	.-272    	; 0x552 <LCD_GoToRowCol>
LCD_IntToString(x);
 662:	80 91 e4 02 	lds	r24, 0x02E4
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	93 df       	rcall	.-218    	; 0x590 <LCD_IntToString>
LCD_DisplayStringRowCol(0,12,"km/h");
 66a:	43 e9       	ldi	r20, 0x93	; 147
 66c:	52 e0       	ldi	r21, 0x02	; 2
 66e:	6c e0       	ldi	r22, 0x0C	; 12
 670:	80 e0       	ldi	r24, 0x00	; 0
 672:	85 df       	rcall	.-246    	; 0x57e <LCD_DisplayStringRowCol>




if(BIT_IS_CLEAR(PINK,PK0))
 674:	88 81       	ld	r24, Y
 676:	80 fd       	sbrc	r24, 0
 678:	06 c0       	rjmp	.+12     	; 0x686 <main+0xbe>
{
	PORTC=0b01111000;
 67a:	a8 b8       	out	0x08, r10	; 8
	LCD_DisplayStringRowCol(2,0,"Lights On      ");
 67c:	48 e9       	ldi	r20, 0x98	; 152
 67e:	52 e0       	ldi	r21, 0x02	; 2
 680:	60 e0       	ldi	r22, 0x00	; 0
 682:	82 e0       	ldi	r24, 0x02	; 2
 684:	7c df       	rcall	.-264    	; 0x57e <LCD_DisplayStringRowCol>
}

if(BIT_IS_CLEAR(PINK,PK1))
 686:	88 81       	ld	r24, Y
 688:	81 fd       	sbrc	r24, 1
 68a:	0f c0       	rjmp	.+30     	; 0x6aa <main+0xe2>
{
		PORTJ=0b00001111;
 68c:	f7 01       	movw	r30, r14
 68e:	b0 82       	st	Z, r11
 690:	8f e1       	ldi	r24, 0x1F	; 31
 692:	9e e4       	ldi	r25, 0x4E	; 78
 694:	01 97       	sbiw	r24, 0x01	; 1
 696:	f1 f7       	brne	.-4      	; 0x694 <main+0xcc>
 698:	00 c0       	rjmp	.+0      	; 0x69a <main+0xd2>
 69a:	00 00       	nop
		_delay_ms(10);
		PORTJ=0;
 69c:	10 82       	st	Z, r1
 69e:	8f e1       	ldi	r24, 0x1F	; 31
 6a0:	9e e4       	ldi	r25, 0x4E	; 78
 6a2:	01 97       	sbiw	r24, 0x01	; 1
 6a4:	f1 f7       	brne	.-4      	; 0x6a2 <main+0xda>
 6a6:	00 c0       	rjmp	.+0      	; 0x6a8 <main+0xe0>
 6a8:	00 00       	nop
				_delay_ms(10);

}


if(BIT_IS_CLEAR(PINK,PK2))
 6aa:	88 81       	ld	r24, Y
 6ac:	82 fd       	sbrc	r24, 2
 6ae:	06 c0       	rjmp	.+12     	; 0x6bc <main+0xf4>
{
	PORTD=0b11000000;
 6b0:	cb b8       	out	0x0b, r12	; 11
		LCD_DisplayStringRowCol(3,0,"Mist Lampes ON     ");
 6b2:	48 ea       	ldi	r20, 0xA8	; 168
 6b4:	52 e0       	ldi	r21, 0x02	; 2
 6b6:	60 e0       	ldi	r22, 0x00	; 0
 6b8:	83 e0       	ldi	r24, 0x03	; 3
 6ba:	61 df       	rcall	.-318    	; 0x57e <LCD_DisplayStringRowCol>

}


if(BIT_IS_CLEAR(PINK,PK3))
 6bc:	88 81       	ld	r24, Y
 6be:	83 fd       	sbrc	r24, 3
 6c0:	ba cf       	rjmp	.-140    	; 0x636 <main+0x6e>
{
	PORTD=0;
 6c2:	1b b8       	out	0x0b, r1	; 11
	PORTC=0;
 6c4:	18 b8       	out	0x08, r1	; 8
		LCD_DisplayStringRowCol(2,0,"Lights OFF         ");
 6c6:	4c eb       	ldi	r20, 0xBC	; 188
 6c8:	52 e0       	ldi	r21, 0x02	; 2
 6ca:	60 e0       	ldi	r22, 0x00	; 0
 6cc:	82 e0       	ldi	r24, 0x02	; 2
 6ce:	57 df       	rcall	.-338    	; 0x57e <LCD_DisplayStringRowCol>
		LCD_DisplayStringRowCol(3,0,"Mist Lampes OFF    ");
 6d0:	40 ed       	ldi	r20, 0xD0	; 208
 6d2:	52 e0       	ldi	r21, 0x02	; 2
 6d4:	60 e0       	ldi	r22, 0x00	; 0
 6d6:	83 e0       	ldi	r24, 0x03	; 3
 6d8:	52 df       	rcall	.-348    	; 0x57e <LCD_DisplayStringRowCol>
 6da:	ad cf       	rjmp	.-166    	; 0x636 <main+0x6e>

000006dc <PWM1_init>:
 6dc:	16 bc       	out	0x26, r1	; 38
 6de:	87 bd       	out	0x27, r24	; 39
 6e0:	83 e8       	ldi	r24, 0x83	; 131
 6e2:	84 bd       	out	0x24, r24	; 36
 6e4:	83 e0       	ldi	r24, 0x03	; 3
 6e6:	85 bd       	out	0x25, r24	; 37
 6e8:	9d 9a       	sbi	0x13, 5	; 19
 6ea:	08 95       	ret

000006ec <PWM2_init>:
 6ec:	16 bc       	out	0x26, r1	; 38
 6ee:	88 bd       	out	0x28, r24	; 40
 6f0:	83 e2       	ldi	r24, 0x23	; 35
 6f2:	84 bd       	out	0x24, r24	; 36
 6f4:	83 e0       	ldi	r24, 0x03	; 3
 6f6:	85 bd       	out	0x25, r24	; 37
 6f8:	27 9a       	sbi	0x04, 7	; 4
 6fa:	08 95       	ret

000006fc <PWM3_init>:
 6fc:	16 bc       	out	0x26, r1	; 38
 6fe:	80 93 b3 00 	sts	0x00B3, r24
 702:	83 e8       	ldi	r24, 0x83	; 131
 704:	80 93 b0 00 	sts	0x00B0, r24
 708:	83 e0       	ldi	r24, 0x03	; 3
 70a:	80 93 b1 00 	sts	0x00B1, r24
 70e:	e1 e0       	ldi	r30, 0x01	; 1
 710:	f1 e0       	ldi	r31, 0x01	; 1
 712:	80 81       	ld	r24, Z
 714:	80 64       	ori	r24, 0x40	; 64
 716:	80 83       	st	Z, r24
 718:	08 95       	ret

0000071a <PWM4_init>:
 71a:	16 bc       	out	0x26, r1	; 38
 71c:	80 93 b4 00 	sts	0x00B4, r24
 720:	83 e2       	ldi	r24, 0x23	; 35
 722:	80 93 b0 00 	sts	0x00B0, r24
 726:	83 e0       	ldi	r24, 0x03	; 3
 728:	80 93 b1 00 	sts	0x00B1, r24
 72c:	24 9a       	sbi	0x04, 4	; 4
 72e:	08 95       	ret

00000730 <SPI_Master_init>:
 #include "SPI.h"

 
 void SPI_Master_init(void)
 {
	 SPI_RES|=(1<<MOSI)|(1<<SS)|(1<<SCK);
 730:	84 b1       	in	r24, 0x04	; 4
 732:	87 60       	ori	r24, 0x07	; 7
 734:	84 b9       	out	0x04, r24	; 4
	 CLEAR_BIT(SPI_PORT,MISO);
 736:	2b 98       	cbi	0x05, 3	; 5
	 SPCR=(1<<SPE)|(1<<MSTR);
 738:	80 e5       	ldi	r24, 0x50	; 80
 73a:	8c bd       	out	0x2c, r24	; 44
 73c:	08 95       	ret

0000073e <itoa>:
 73e:	45 32       	cpi	r20, 0x25	; 37
 740:	51 05       	cpc	r21, r1
 742:	18 f4       	brcc	.+6      	; 0x74a <itoa+0xc>
 744:	42 30       	cpi	r20, 0x02	; 2
 746:	08 f0       	brcs	.+2      	; 0x74a <itoa+0xc>
 748:	04 c0       	rjmp	.+8      	; 0x752 <__itoa_ncheck>
 74a:	fb 01       	movw	r30, r22
 74c:	10 82       	st	Z, r1
 74e:	cb 01       	movw	r24, r22
 750:	08 95       	ret

00000752 <__itoa_ncheck>:
 752:	bb 27       	eor	r27, r27
 754:	4a 30       	cpi	r20, 0x0A	; 10
 756:	31 f4       	brne	.+12     	; 0x764 <__itoa_ncheck+0x12>
 758:	99 23       	and	r25, r25
 75a:	22 f4       	brpl	.+8      	; 0x764 <__itoa_ncheck+0x12>
 75c:	bd e2       	ldi	r27, 0x2D	; 45
 75e:	90 95       	com	r25
 760:	81 95       	neg	r24
 762:	9f 4f       	sbci	r25, 0xFF	; 255
 764:	01 c0       	rjmp	.+2      	; 0x768 <__utoa_common>

00000766 <__utoa_ncheck>:
 766:	bb 27       	eor	r27, r27

00000768 <__utoa_common>:
 768:	fb 01       	movw	r30, r22
 76a:	55 27       	eor	r21, r21
 76c:	aa 27       	eor	r26, r26
 76e:	88 0f       	add	r24, r24
 770:	99 1f       	adc	r25, r25
 772:	aa 1f       	adc	r26, r26
 774:	a4 17       	cp	r26, r20
 776:	10 f0       	brcs	.+4      	; 0x77c <__utoa_common+0x14>
 778:	a4 1b       	sub	r26, r20
 77a:	83 95       	inc	r24
 77c:	50 51       	subi	r21, 0x10	; 16
 77e:	b9 f7       	brne	.-18     	; 0x76e <__utoa_common+0x6>
 780:	a0 5d       	subi	r26, 0xD0	; 208
 782:	aa 33       	cpi	r26, 0x3A	; 58
 784:	08 f0       	brcs	.+2      	; 0x788 <__utoa_common+0x20>
 786:	a9 5d       	subi	r26, 0xD9	; 217
 788:	a1 93       	st	Z+, r26
 78a:	00 97       	sbiw	r24, 0x00	; 0
 78c:	79 f7       	brne	.-34     	; 0x76c <__utoa_common+0x4>
 78e:	b1 11       	cpse	r27, r1
 790:	b1 93       	st	Z+, r27
 792:	11 92       	st	Z+, r1
 794:	cb 01       	movw	r24, r22
 796:	00 c0       	rjmp	.+0      	; 0x798 <strrev>

00000798 <strrev>:
 798:	dc 01       	movw	r26, r24
 79a:	fc 01       	movw	r30, r24
 79c:	67 2f       	mov	r22, r23
 79e:	71 91       	ld	r23, Z+
 7a0:	77 23       	and	r23, r23
 7a2:	e1 f7       	brne	.-8      	; 0x79c <strrev+0x4>
 7a4:	32 97       	sbiw	r30, 0x02	; 2
 7a6:	04 c0       	rjmp	.+8      	; 0x7b0 <strrev+0x18>
 7a8:	7c 91       	ld	r23, X
 7aa:	6d 93       	st	X+, r22
 7ac:	70 83       	st	Z, r23
 7ae:	62 91       	ld	r22, -Z
 7b0:	ae 17       	cp	r26, r30
 7b2:	bf 07       	cpc	r27, r31
 7b4:	c8 f3       	brcs	.-14     	; 0x7a8 <strrev+0x10>
 7b6:	08 95       	ret

000007b8 <_exit>:
 7b8:	f8 94       	cli

000007ba <__stop_program>:
 7ba:	ff cf       	rjmp	.-2      	; 0x7ba <__stop_program>
